version: '3'
services:
  http-api:
    depends_on: 
      - postgres
    image: cosmtrek/air
    working_dir: /app
    volumes:
      - ./:/app
    ports:
      - 8000:8000
    entrypoint: bash -c "
        apt-get update
        && cp ./resources/az-dev-cert.pem /etc/ssl/certs
        && chmod 644 /etc/ssl/certs/az-dev-cert.pem && update-ca-certificates
        && apt-get install -y postgresql-client
        && go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
        && migrate -database "postgres://postgres:password@postgres:5432/multiplayer?sslmode=disable" -path=db/migrations up
        && /go/bin/air -c .air.toml
      "
  websocket-api:
    depends_on:
      - postgres
    build: 
      context: ./websocket
      dockerfile: Dockerfile
      target: planner
    working_dir: /app
    volumes:
      - ./websocket/:/app
    ports:
      - 8001:8001
    environment:
      - APP_APPLICATION__HOST=0.0.0.0
      - APP_DATABASE__HOST=postgres
      - SQLX_OFFLINE=true
    entrypoint: bash -c "
        cargo install cargo-watch
        && cargo watch -x run
      "
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    ports:
      - 5432:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=multiplayer
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: "azurite"
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - ./resources/:/opt/azurite/resources
    entrypoint: azurite --blobHost 0.0.0.0 --cert ./resources/az-dev-cert.pem --key ./resources/az-dev-key.pem --oauth basic
